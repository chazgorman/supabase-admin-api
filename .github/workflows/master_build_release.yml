name: Build and Release on Push to Master

on:
  push:
    branches:
      - master

jobs:
  release:
    strategy:
      matrix:
        node: ['12']

    outputs:
      status: ${{ steps.pre-release.outputs.release != steps.post-release.outputs.release }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - id: pre-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: supabase
          repo: supabase-admin-api
          excludes: prerelease, draft

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Release on GitHub
        id: github-release
        run: npx semantic-release -p        \
          @semantic-release/commit-analyzer \
          @semantic-release/github         \
          @semantic-release/release-notes-generator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: post-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: supabase
          repo: supabase-admin-api
          excludes: prerelease, draft

  deploy:
    needs: release
    runs-on: ubuntu-18.04
    if: needs.release.outputs.status
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.14.4' # The Go version to download (if necessary) and use.

      - run: make deps

      - run: make all

      - id: releases
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: supabase
          repo: supabase-admin-api
          excludes: prerelease, draft

      - run: tar -czvf supabase-admin-api-${{ steps.releases.outputs.release }}.tar.gz supabase-admin-api

      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: supabase-admin-api-${{ steps.releases.outputs.release }}.tar.gz
      #     path: ./supabase-admin-api-${{ steps.releases.outputs.release }}.tar.gz

      - uses: AButler/upload-release-assets@v2.0
        with:
          files: 'supabase-admin-api-${{ steps.releases.outputs.release }}.tar.gz'
          release-tag: ${{ steps.releases.outputs.release }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Get release
      #   id: get_release
      #   uses: bruceadams/get-release@v1.2.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1.0.2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.get_release.outputs.upload_url }}
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip

